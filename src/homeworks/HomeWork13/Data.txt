types/types.ts:

Определяем интерфейс CatFact, который описывает структуру факта о кошках, который мы получаем из API.
styles.ts:

Создаем стилизованные компоненты с помощью styled-components для контейнера приложения, кнопок, блока данных и элементов данных.
components/Lesson13.tsx:

Основной компонент Lesson13.
Используем хук useState для хранения данных.
Используем хук useEffect для выполнения запроса при загрузке страницы.
Функция fetchData выполняет запрос к https://catfact.ninja/fact и добавляет новый факт в массив данных.
Функция deleteAllData очищает массив данных.
Кнопка "GET MORE INFO" вызывает функцию fetchData.
Кнопка "DELETE ALL DATA" отображается только если есть данные и вызывает функцию deleteAllData.
Блок данных отображается только если есть данные. Блок данных имеет максимальную высоту 700px и скролл, если данных больше, чем может вместить блок.
Таким образом, при загрузке страницы и при клике на кнопку "GET MORE INFO" будут загружаться и отображаться новые факты о кошках. 
Кнопка "DELETE ALL DATA" очищает все данные и исчезает, если данных нет.

================================================================================================================

HomeWork13.tsx

1. useState<CatFact[]>([]) инициализирует состояние catFacts как пустой массив, который будет хранить список фактов о кошках

2. useEffect с пустым массивом зависимостей ([]) вызывается один раз при монтировании компонента
Это означает, что функция fetchCatFact будет вызвана сразу после первого рендеринга компонента

3. Функция fetchCatFact выполняет асинхронный запрос к API https://catfact.ninja/fact, чтобы получить новый факт о кошке
Результат запроса преобразуется в формат JSON
Новый факт добавляется в текущее состояние catFacts с помощью функции setCatFacts, которая обновляет состояние, добавляя новый факт в массив
В случае ошибки запрос логируется в консоль

4. deleteAllFacts очищает список фактов о кошках, устанавливая состояние catFacts в пустой массив

5. renderFacts проверяет, есть ли факты в catFacts. Если нет, функция возвращает null.
Если факты есть, функция рендерит DataBlock, в котором отображается каждый факт о кошке в компоненте DataItem

6. AppContainer оборачивает всё содержимое компонента, включая кнопки и отображаемые факты
Кнопка "GET MORE INFO" вызывает fetchCatFact при клике
Кнопка "DELETE ALL DATA" отображается только если есть факты, и вызывает deleteAllFacts при клике
renderFacts() вызывается для отображения списка фактов

types.ts

1. HomeWork13 экспортируется по умолчанию.
Интерфейс CatFact определяет структуру объекта, который ожидается от API: факт о кошке и его длина